# ----------------------
# General
# ----------------------
# Alias's for multiple directory listing commands
alias lt='ls --human-readable --size -1 -S --classify'
alias la='ls -Alh' # show hidden files
alias ls='ls -aFh --color=always' # add colors and file type extensions
alias lx='ls -lXBh' # sort by extension
alias lk='ls -lSrh' # sort by size
alias lc='ls -lcrh' # sort by change time
alias lu='ls -lurh' # sort by access time
alias lr='ls -lRh' # recursive ls
alias lt='ls -ltrh' # sort by date
alias lm='ls -alh |more' # pipe through 'more'
alias lw='ls -xAh' # wide listing format
alias ll='ls -Fls' # long listing format
alias labc='ls -lap' #alphabetical sort
alias lf="ls -l | egrep -v '^d'" # files only
alias ldir="ls -l | egrep '^d'" # directories only

# Search command line history
alias h="history | grep "

# Search running processes
alias p="ps aux | grep "
alias topcpu="/bin/ps -eo pcpu,pid,user,args | sort -k 1 -r | head -10"

# Show open ports
alias openports='netstat -nape --inet'

# Alias's for safe and forced reboots
alias rebootsafe='sudo shutdown -r now'
alias rebootforce='sudo shutdown -r -n now'

# Alias's to show disk space and space used in a folder
alias diskspace="du -S | sort -n -r |more"
alias folders='du -h --max-depth=1'
alias folderssort='find . -maxdepth 1 -type d -print0 | xargs -0 du -sk | sort -rn'
alias tree='tree -CAhF --dirsfirst'
alias treed='tree -CAFd'
alias mountedinfo='df -hT'

# Show current network information
netinfo ()
{
	echo "--------------- Network Information ---------------"
	/sbin/ifconfig | awk /'inet addr/ {print $2}'
	echo ""
	/sbin/ifconfig | awk /'Bcast/ {print $3}'
	echo ""
	/sbin/ifconfig | awk /'inet addr/ {print $4}'

	/sbin/ifconfig | awk /'HWaddr/ {print $4,$5}'
	echo "---------------------------------------------------"
}

# Extracts any archive(s) (if unp isn't installed)
extract () {
	for archive in "$@"; do
		if [ -f "$archive" ] ; then
			case $archive in
				*.tar.bz2)   tar xvjf $archive    ;;
				*.tar.gz)    tar xvzf $archive    ;;
				*.bz2)       bunzip2 $archive     ;;
				*.rar)       rar x $archive       ;;
				*.gz)        gunzip $archive      ;;
				*.tar)       tar xvf $archive     ;;
				*.tbz2)      tar xvjf $archive    ;;
				*.tgz)       tar xvzf $archive    ;;
				*.zip)       unzip $archive       ;;
				*.Z)         uncompress $archive  ;;
				*.7z)        7z x $archive        ;;
				*)           echo "don't know how to extract '$archive'..." ;;
			esac
		else
			echo "'$archive' is not a valid file!"
		fi
	done
}

# others
alias left='ls -t -1'
alias cpv='rsync -ah --info=progress2'
alias untar='tar -zxvf '
alias wget='wget -c '
alias ipe='curl ipinfo.io/ip'
alias svenv='source venv/Scripts/activate'
alias sdea='deactivate'
alias mv="mv -i"
alias cp="cp -i"
alias cls='clear'
alias gm='gamemoded -r'
alias resource="pkill gpg-agent && pkill ssh-agent && source ~/.zshrc"
alias ghistory="gum filter < $HISTFILE --height 20"

# dict
alias startdict='cd ~/git/dict && ./setup.sh dev && source prepare.sh'
alias repopdict='./fe-run ./ts-run scripts/db/loadDictionaryData.ts && ./fe-run ./ts-run scripts/db/loadDictionaryData/computeFurigana.ts'

## get rid of command not found ##
alias cd..='cd ..'

## a quick way to get out of current directory ##
alias ..='cd ..'
alias ...='cd ../../../'
alias ....='cd ../../../../'
alias .....='cd ../../../../'
alias .2='cd ../../'
alias .4='cd ../../../../'
alias .5='cd ../../../../..'

function cd() {
    DIR="$*"
    # if no DIR given, go home
    if [ $# -lt 1 ]; then
        DIR=$HOME
    fi
    builtin cd "${DIR}" &&
        # use your preferred ls command
        ls -F --color=auto
}

# ----------------------
# nordvpn
# ----------------------
alias ns="nordvpn status"
alias nd="nordvpn disconnect"
alias nc="nordvpn connect"
alias ncs="nordvpn connect Switzerland"
function nkillswitch() {
    if [[ $1 == "" ]]; then
        echo "Command needs value: on | off"
    else
        nordvpn set killswitch $1
    fi
}

# ----------------------
# Git Aliases
# ----------------------
alias startgit='cd `git rev-parse --show-toplevel` && git checkout main && git pull'
alias cg='cd `git rev-parse --show-toplevel`'

alias ga='git add'
alias gaa='git add .'
alias gaaa='git add --all'
alias gau='git add --update'
alias gb='git branch'
alias gc='git commit'
alias gcm='git commit --message'
alias gcf='git commit --fixup'
alias gco='git checkout'
alias gcob='git checkout -b'
alias gcom='git checkout main'
alias gcos='git checkout staging'
alias gcod='git checkout develop'
alias gd='git diff'
alias gda='git diff HEAD'
alias gi='git init'
alias glg='git log --graph --oneline --decorate --all'
alias gld='git log --pretty=format:"%h %ad %s" --date=short --all'
alias gm='git merge --no-ff'
alias gma='git merge --abort'
alias gmc='git merge --continue'
alias gp='git pull'
alias gpr='git pull --rebase'
alias gr='git rebase'
alias gs='git status'
alias gss='git status --short'
alias gst='git stash'
alias gsta='git stash apply'
alias gstd='git stash drop'
alias gstl='git stash list'
alias gstp='git stash pop'
alias gsts='git stash save'
# gum extras
alias ggr='git status --short | cut -c 4- | gum choose | xargs git restore --staged'
alias gcg='git commit -m "$(gum input)" -m "$(gum write)"'
alias gbd=g'git branch | cut -c 3- | gum choose --no-limit | xargs git branch -D'
alias gprc='gh pr list | cut -f1,2 | gum choose | cut -f1 | xargs gh pr checkout --track'
alias gcr='git branch -a | cut -c 3- | gum choose | cut -f1 | xargs git checkout --track'

# ----------------------
# Git Functions
# ----------------------
# Git log find by commit message
unalias glf
function glf() { git log --all --grep="$1"; }

unalias gcor
function gcor() {
    if [ -n "$1" ]; then
        if git show-ref -q --heads $1; then
            gco $1
        else
            gfo $1
            gco -t origin/$1
        fi
    else
        echo "Unspecified branch name"
    fi
}

############################################################################
#                                                                          #
#               ------- Useful Docker Aliases --------                     #
#                                                                          #
#     # Installation :                                                     #
#     copy/paste these lines into your .bashrc or .zshrc file or just      #
#     type the following in your current shell to try it out:              #
#     wget -O - https://gist.githubusercontent.com/jgrodziski/9ed4a17709baad10dbcd4530b60dfcbb/raw/d84ef1741c59e7ab07fb055a70df1830584c6c18/docker-aliases.sh | bash
#                                                                          #
#     # Usage:                                                             #
#     daws <svc> <cmd> <opts> : aws cli in docker with <svc> <cmd> <opts>  #
#     dc             : docker-compose                                      #
#     dcu            : docker-compose up -d                                #
#     dcd            : docker-compose down                                 #
#     dcs            : docker-compose stop                                 #
#     dcr            : docker-compose run                                  #
#     dex <container>: execute a bash shell inside the RUNNING <container> #
#     di <container> : docker inspect <container>                          #
#     dim            : docker images                                       #
#     dip            : IP addresses of all running containers              #
#     dl <container> : docker logs -f <container>                          #
#     dnames         : names of all running containers                     #
#     dps            : docker ps                                           #
#     dpsa           : docker ps -a                                        #
#     drmc           : remove all exited containers                        #
#     drmid          : remove all dangling images                          #
#     drun <image>   : execute a bash shell in NEW container from <image>  #
#     dsr <container>: stop then remove <container>                        #
#                                                                          #
############################################################################

function dnames-fn {
    for ID in $(docker ps | awk '{print $1}' | grep -v 'CONTAINER'); do
        docker inspect $ID | grep Name | head -1 | awk '{print $2}' | sed 's/,//g' | sed 's%/%%g' | sed 's/"//g'
    done
}

function dip-fn {
    echo "IP addresses of all named running containers"

    for DOC in $(dnames-fn); do
        IP=$(docker inspect $DOC | grep -m3 IPAddress | cut -d '"' -f 4 | tr -d "\n")
        OUT+=$DOC'\t'$IP'\n'
    done
    echo $OUT | column -t
}

function dex-fn {
    docker exec -it $1 ${2:-bash}
}

function di-fn {
    docker inspect $1
}

function dl-fn {
    docker logs -f $1
}

function drun-fn {
    docker run -it $1 $2
}

function dcr-fn {
    docker-compose run $@
}

function dsr-fn {
    docker stop $1
    docker rm $1
}

function drmc-fn {
    docker rm $(docker ps --all -q -f status=exited)
}

function drmid-fn {
    imgs=$(docker images -q -f dangling=true)
    [ ! -z "$imgs" ] && docker rmi "$imgs" || echo "no dangling images."
}

# in order to do things like dex $(dlab label) sh
function dlab {
    docker ps --filter="label=$1" --format="{{.ID}}"
}

function dc-fn {
    docker-compose $*
}

function d-aws-cli-fn {
    docker run \
        -e AWS_ACCESS_KEY_ID=$AWS_ACCESS_KEY_ID \
        -e AWS_DEFAULT_REGION=$AWS_DEFAULT_REGION \
        -e AWS_SECRET_ACCESS_KEY=$AWS_SECRET_ACCESS_KEY \
        amazon/aws-cli:latest $1 $2 $3
}

alias daws=d-aws-cli-fn
alias dc=dc-fn
alias dcu="docker-compose up -d"
alias dcd="docker-compose down"
alias dcs="docker-compose stop"
alias dcr=dcr-fn
alias dex=dex-fn
alias di=di-fn
alias dim="docker images"
alias dip=dip-fn
alias dl=dl-fn
alias dnames=dnames-fn
alias dps="docker ps"
alias dpsa="docker ps -a"
alias drmc=drmc-fn
alias drmid=drmid-fn
alias drun=drun-fn
alias dsp="docker system prune --all"
alias dsr=dsr-fn
